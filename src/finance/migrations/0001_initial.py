# Generated by Django 5.2.7 on 2025-10-20 11:35

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('building', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название статьи')),
                ('type', models.CharField(choices=[('income', 'Приход'), ('expense', 'Расход')], max_length=10, verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Статья прихода/расхода',
                'verbose_name_plural': 'Статьи приходов/расходов',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название (грн)')),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюты',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название услуги')),
                ('show_in_counters', models.BooleanField(default=True, verbose_name='Показывать в счетчиках')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название тарифа')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название (м3)')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
            },
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=100, unique=True, verbose_name='Серийный номер')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counters', to='building.apartment', verbose_name='Квартира')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='finance.service', verbose_name='Услуга (что измеряет)')),
            ],
            options={
                'verbose_name': 'Счетчик',
                'verbose_name_plural': 'Счетчики',
            },
        ),
        migrations.CreateModel(
            name='CounterReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата снятия')),
                ('value', models.DecimalField(decimal_places=3, max_digits=12, verbose_name='Показание')),
                ('status', models.CharField(choices=[('new', 'Новое'), ('considered', 'Учтено'), ('zero', 'Нулевое')], default='new', max_length=20, verbose_name='Статус')),
                ('counter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readings', to='finance.counter', verbose_name='Счетчик')),
            ],
            options={
                'verbose_name': 'Показание счетчика',
                'verbose_name_plural': 'Показания счетчиков',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveIntegerField(verbose_name='Месяц (число)')),
                ('year', models.PositiveIntegerField(verbose_name='Год')),
                ('status', models.CharField(choices=[('unpaid', 'Не оплачено'), ('partially_paid', 'Частично оплачено'), ('paid', 'Оплачено')], default='unpaid', max_length=20, verbose_name='Статус оплаты')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Итоговая сумма')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receipts', to='building.apartment', verbose_name='Квартира')),
            ],
            options={
                'verbose_name': 'Квитанция',
                'verbose_name_plural': 'Квитанции',
            },
        ),
        migrations.CreateModel(
            name='CashBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата транзакции')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='finance.article', verbose_name='Статья')),
                ('personal_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='building.personalaccount', verbose_name='Лицевой счет')),
                ('receipt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.receipt', verbose_name='Квитанция (если оплата)')),
            ],
            options={
                'verbose_name': 'Транзакция по кассе',
                'verbose_name_plural': 'Транзакции по кассе',
            },
        ),
        migrations.CreateModel(
            name='ReceiptItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма начисления')),
                ('consumption', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Потребление')),
                ('price_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена за ед.')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.receipt', verbose_name='Квитанция')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='finance.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Строка квитанции',
                'verbose_name_plural': 'Строки квитанций',
                'unique_together': {('receipt', 'service')},
            },
        ),
        migrations.AddField(
            model_name='receipt',
            name='services',
            field=models.ManyToManyField(through='finance.ReceiptItem', to='finance.service', verbose_name='Услуги в квитанции'),
        ),
        migrations.CreateModel(
            name='TariffService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='finance.currency', verbose_name='Валюта')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.service', verbose_name='Услуга')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.tariff', verbose_name='Тариф')),
            ],
            options={
                'verbose_name': 'Услуга в тарифе',
                'verbose_name_plural': 'Услуги в тарифах',
                'unique_together': {('tariff', 'service')},
            },
        ),
        migrations.AddField(
            model_name='tariff',
            name='services',
            field=models.ManyToManyField(through='finance.TariffService', to='finance.service', verbose_name='Услуги'),
        ),
        migrations.AddField(
            model_name='service',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='finance.unit', verbose_name='Ед. измерения'),
        ),
        migrations.AlterUniqueTogether(
            name='receipt',
            unique_together={('apartment', 'month', 'year')},
        ),
    ]
