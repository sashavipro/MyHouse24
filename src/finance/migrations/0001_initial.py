# Generated by Django 5.2.7 on 2025-10-23 14:45

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('building', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('type', models.CharField(choices=[('income', 'Приход'), ('expense', 'Расход')], max_length=10, verbose_name='type')),
            ],
            options={
                'verbose_name': 'Revenue/expense item',
                'verbose_name_plural': 'Revenue/expense item',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Currency')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currency',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Service')),
                ('show_in_counters', models.BooleanField(default=True, verbose_name='Show in counters')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Service',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Tariff')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
            ],
            options={
                'verbose_name': 'Tariff',
                'verbose_name_plural': 'Tariffs',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
            },
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=100, unique=True, verbose_name='Serial Number')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counters', to='building.apartment', verbose_name='Apartment')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='finance.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Counter',
                'verbose_name_plural': 'Counters',
            },
        ),
        migrations.CreateModel(
            name='CounterReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date of removal')),
                ('value', models.DecimalField(decimal_places=3, max_digits=12, verbose_name='Indication')),
                ('status', models.CharField(choices=[('new', 'Новое'), ('considered', 'Учтено'), ('zero', 'Нулевое')], default='new', max_length=20, verbose_name='status')),
                ('counter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readings', to='finance.counter', verbose_name='Counter')),
            ],
            options={
                'verbose_name': 'Meter reading',
                'verbose_name_plural': 'Meter reading',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveIntegerField(verbose_name='month')),
                ('year', models.PositiveIntegerField(verbose_name='year')),
                ('status', models.CharField(choices=[('unpaid', 'He оплачено'), ('partially_paid', 'Частично оплачено'), ('paid', 'Оплачено')], default='unpaid', max_length=20, verbose_name='status')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='total amount')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created_at')),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receipts', to='building.apartment', verbose_name='apartment')),
            ],
            options={
                'verbose_name': 'Receipt',
                'verbose_name_plural': 'Receipts',
            },
        ),
        migrations.CreateModel(
            name='CashBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='amount')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Transaction date')),
                ('comment', models.TextField(blank=True, verbose_name='comment')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='finance.article', verbose_name='Article')),
                ('personal_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='building.personalaccount', verbose_name='personal account')),
                ('receipt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.receipt', verbose_name='receipt')),
            ],
            options={
                'verbose_name': 'Cash transaction',
                'verbose_name_plural': 'Cash transaction',
            },
        ),
        migrations.CreateModel(
            name='ReceiptItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount charged')),
                ('consumption', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='consumption')),
                ('price_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='price per unit.')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.receipt', verbose_name='Receipt')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='finance.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Receipt line',
                'verbose_name_plural': 'Receipts line',
                'unique_together': {('receipt', 'service')},
            },
        ),
        migrations.AddField(
            model_name='receipt',
            name='services',
            field=models.ManyToManyField(through='finance.ReceiptItem', to='finance.service', verbose_name='services'),
        ),
        migrations.CreateModel(
            name='TariffService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='price')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='finance.currency', verbose_name='currency')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.service', verbose_name='Service')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.tariff', verbose_name='Tariff')),
            ],
            options={
                'verbose_name': 'Service included in the tariff',
                'verbose_name_plural': 'Service included in the tariffs',
                'unique_together': {('tariff', 'service')},
            },
        ),
        migrations.AddField(
            model_name='tariff',
            name='services',
            field=models.ManyToManyField(through='finance.TariffService', to='finance.service', verbose_name='Service'),
        ),
        migrations.AddField(
            model_name='service',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='finance.unit', verbose_name='Unit'),
        ),
        migrations.AlterUniqueTogether(
            name='receipt',
            unique_together={('apartment', 'month', 'year')},
        ),
    ]
